//位运算

//位运算符
&  按位与
|  按位或
^  按位异或
~  取反
<< 左移
>> 右移


//& : 如果两个相应的二进制都为1，则该位的结果值位1；否则为0                      ==指定为为0
//| : 如果两个相应的二进制只要有一个为1，则该位的结果值位1；否则为0
//^ : 如果两个相应的二进制只要同号，则该位的结果值位1；否则为0                    ==指定位反转


//~ : 对二进制数按位取反， 即将0变为1，1变成0
//<< : 将一个数的各个二进制位全部左移若干位
//>> : 将一个数的各个二进制位全部右移若干位   （右移要注意符号位的问题 ，一般系统会自动在首位补1，当然也可能不会。要注意）

a=15 (00001111)
a<<=2     （左移两位，相当于该数乘以2的2次方）
00111100  (a为十进制60)



位运算符与赋值运算符可以组成复合赋值运算符

&=
|=
>>=
<<=
^=

a&=b;




//位段：
信息的存储一般以字节为单位。有时存储一个信息不必用一个或多个字节
例如真假 为1 0


c语言允许一个结构体中以位为单位来指定其成员所占内存长度，这种以位为单位的成员称为“位段”或“位域”
struct packed-data
{
    unsigned a:2; //一个存储单元
    unsigned :0;  //隔开上下
    unsigned v:6; //另一个存储单元
}data;



//














